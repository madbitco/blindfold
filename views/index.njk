{% set page_title = page.title or meta.subtitle or '' %}
{% set page_desc = page_description or meta.description or '' %}

{% extends "layouts/main.njk" %}

{% block body %}
<main class="pa3 pa4-m mw6 ml-auto mr-auto">
  <p class="tc mv1">Disable retweets from the people you follow.</p>
  <p class="tc mv1"><strong>All at once</strong>. {{ "Why?" if not user }}</p>
  
  {% if not user %}
    <p>Because not seeing retweets in your feed will help your mind <strong>stay free of the negativity</strong> and bullshit that it is.</p>
    <p class="mv4">
      <a href="{{ base_url }}/auth" class="btn btn-primary db">Sign in with Twitter</a>
    </p>
    <p class="lh-title tc"><small>You will have to confirm your intention after authorising the app with Twitter.</small></p>
  {% else %}
    {% verbatim %}

    <div class="flex justify-center" id="app">
      <div class="w-100">
        <h3 class="tc mb4 normal">Retweets are <strong>{{ isMaxBlocked }}</strong> for all people you follow.</h3>
        <p class="tc">
          <btn-progress
            css="btn btn-primary w5"
            label="Disable retweets"
            :activity="isActiveOff"
            @click="silenceTheLambs">
          </btn-progress>
        </p>
        <p class="f6 light-grey ttu tracked tc">or</p>
        <p class="tc">
          <btn-progress
            css="btn btn-secondary w5"
            label="Enable retweets"
            :activity="isActiveOn"
            :disabled="rtBlocked == 0"
            @click="releaseTheKraken">
          </btn-progress>
        </p>
      </div>
    </div>

    {% endverbatim %}
  {% endif %}
</main>
{% endblock %}

{% block scripts %}
  {% if user %}
    {% verbatim %}
    <script>
      /* global Vue */
      /* eslint indent: 0 */
      Vue.component('btn-progress', {
        props: ['activity', 'label', 'css', 'disabled'],
        template: '<button :class="css" :disabled="disabled" @click="btnClick"><span v-show="!activity" class="db mv1">{{ label }}</span><span class="spinner" v-show="activity"><span class="double-bounce1"></span><span class="double-bounce2"></span></span></button>',
        methods: {
          btnClick: function () {
            this.$emit('click');
          }
        }
      });

      var app = new Vue({
        el: '#app',
        data: {
          rtBlocked: null,
          following: null,
          isActiveOn: false,
          isActiveOff: false
        },
        computed: {
          isMaxBlocked: function () {
            if (this.rtBlocked >= this.following) {
              return 'disabled';
            } else {
              return 'enabled';
            }
          }
        },
        methods: {
          updateFriendship: function (wantRetweets) {
            var _self = this;
            fetch('/friends', {
              method: 'POST',
              body: JSON.stringify({
                want_retweets: wantRetweets
              }),
              headers: {
                'Content-Type': 'application/json'
              }
            }).then(function (response) {
              return response.json();
            }).then(function (json) {
              _self.rtBlocked = json.retweeters_blocked.count;
              _self.isActiveOff = false;
              _self.isActiveOn = false;
            });
          },
          silenceTheLambs: function (ev) {
            this.isActiveOff = true;
            this.updateFriendship(false);
          },
          releaseTheKraken: function (ev) {
            this.isActiveOn = true;
            this.updateFriendship(true);
          }
        },
        mounted: function () {
          var _self = this;
          _self.$nextTick(function () {
            fetch('/friends').then(function (response) {
              return response.json();
            }).then(function (json) {
              _self.rtBlocked = json.retweeters_blocked.count;
              _self.following = json.following.length;
            });
          });
        }
      });
    </script>
    {% endverbatim %}
  {% endif %}
{% endblock %}
