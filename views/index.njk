{% set page_title = page.title or meta.subtitle or '' %}
{% set page_desc = page_description or meta.description or '' %}

{% extends "layouts/main.njk" %}

{% block body %}
<main class="pa3 pa4-m mw6 ml-auto mr-auto">
  <p class="tc mv1">Disable retweets from the people you follow.</p>
  <p class="tc mv1"><strong>All at once</strong>. {{ "Why?" if not user }}</p>
  
  {% if not user %}
    <p>Because not seeing retweets in your feed will help your mind <strong>stay free of the negativity</strong> and bullshit that it is.</p>
    <p class="mv4">
      <a href="{{ base_url }}/auth" class="btn btn-primary db">Sign in with Twitter</a>
    </p>
    <p class="lh-title tc"><small>You will have to confirm your intention after authorising the app with Twitter.</small></p>
  {% else %}
    {% verbatim %}

    <div class="flex justify-center" id="app">
      <div>
        <p v-if="rtBlocked > 0" class="tc mb4">You are currently not seeing retweets for <strong>{{ rtBlocked }}</strong> of the people you follow.</p>
        <p class="tc">
          <button class="btn btn-primary w-100" @click="silenceTheLambs">Disable retweets</button>
        </p>
        <p class="f6 light-grey ttu tracked tc">or</p>
        <p class="tc">
          <button class="btn btn-secondary w-100" :disabled="rtBlocked == 0" @click="releaseTheKraken">Enable retweets</button>
        </p>
      </div>
    </div>

    {% endverbatim %}
  {% endif %}
</main>
{% endblock %}

{% block scripts %}
  {% if user %}
    <script>
      /* global Vue */
      /* eslint indent: 0 */
      var app = new Vue({
        el: '#app',
        data: {
          rtBlocked: null,
          following: null
        },
        methods: {
          updateFriendship: function (wantRetweets) {
            var _self = this;
            fetch('/friends', {
              method: 'POST',
              body: JSON.stringify({
                want_retweets: wantRetweets
              }),
              headers: {
                'Content-Type': 'application/json'
              }
            }).then(function (response) {
              return response.json();
            }).then(function (json) {
              _self.rtBlocked = json.retweeters_blocked.count;
            });
            console.log('lambs have been silenced');
          },
          silenceTheLambs: function (ev) {
            this.updateFriendship(false);
          },
          releaseTheKraken: function (ev) {
            this.updateFriendship(true);
          }
        },
        mounted: function () {
          var _self = this;
          _self.$nextTick(function () {
            fetch('/friends').then(function (response) {
              return response.json();
            }).then(function (json) {
              _self.rtBlocked = json.retweeters_blocked.count;
              _self.following = json.following;
            });
          });
        }
      });
    </script>
  {% endif %}
{% endblock %}
